plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.graalvm.buildtools.native' version '0.9.20'
    id 'com.github.jmongard.git-semver-plugin'
    id 'com.adarshr.test-logger'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

def publishToDocker = Boolean.parseBoolean(System.getenv().getOrDefault('PUBLISH_TO_DOCKER', 'false'))
def dockerUsername = System.getenv().getOrDefault('DOCKER_USERNAME', 'user')
def dockerPassword = System.getenv().getOrDefault('DOCKER_PASSWORD', 'pass')
def appVersion = System.getenv().getOrDefault('APP_VERSION', '0.0.1-SNAPSHOT')
def gitHash = System.getenv().getOrDefault('GIT_HASH', '123456')

group = 'biz.digissance'
version = semver.version as String
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.18.0")
    set('cucumberVersion', "7.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation("io.cucumber:cucumber-junit-platform-engine:$cucumberVersion")
    testImplementation("io.cucumber:cucumber-java:$cucumberVersion")
    testImplementation("io.cucumber:cucumber-spring:$cucumberVersion")

    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootBuildImage {
    imageName = "ghcr.io/digissance/homie-demo"
    publish = publishToDocker
    tags = ["ghcr.io/digissance/homie-demo:${semver.version}"]
    docker {
        publishRegistry {
            username = dockerUsername
            password = dockerPassword
        }
    }
    buildCache {
        volume {
            name = "cache-${rootProject.name}.build"
        }
    }
    launchCache {
        volume {
            name = "cache-${rootProject.name}.launch"
        }
    }
}

jib {
    to {
        image = "ghcr.io/digissance/homie-demo"
        tags = [appVersion] as List<String>
    }
}

task getCurrentVersion {
    print "${semver.version}-$gitHash"
}

testlogger {
    theme 'mocha'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation, runtimeOnly
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'biz.digissance.homiedemo.bdd',
                    '--tags', System.getProperty('cucumber.tags', 'not @WorkInProgress'),
                    'src/test/resources/features']
        }
    }
}